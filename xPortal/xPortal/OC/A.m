

#import "A.h"
#import "A+xExtension.h"
#import "A+xCategory.h"

NSString* A_global_name = @"A";

@implementation A

//构造方法
-(instancetype)initWithStr:(NSString*)str andStr:(NSString*)str2{
    self = [super init];
    if(self){
        s1_ = str;
        s2_ = str2;
        //...
    }
    return self;
}

//实例方法
-(void)a_makeStr{
    s1_ = @"a_Hello";
    s2_ = @"a_World";
    s3_ = @"a_Hello";
    s4_ = @"a_World";
    s5_ = @"a_Hello";
    // the variables generated by compiler for p1 and p2 when use the default getter and setter
    // if you override the getter and setter methods, _p1 and _p2 will not exist
    _p1 = 0;
    _p2 = @"World";
    self.p2 = @"World";
    
    //可以访问Extension中定义的变量，属性，方法
    s6_ = @"a_Hello";
    s7_ = @"a_World";
    s8_ = @"a_Hello";
    s9_ = @"a_World";
    _p3 = 0;
    [self e_makeStr];
    
    //可以调用category中的方法
    [self x_genStr];
}

/* the default implemetaton of getter and setter method for p1
- (int)p1 {
    return _p1;
}

- (void)setP1:(int)value {
    _p1 = value;
}
*/

//类方法
+(NSString*)getNickname{
    return A_global_name;
}

//实现接口
-(void)sendMsg{
    //...
}

-(void)receiveMsg:(NSString*)msg{
    static NSString* msgTitle = @"TuJia";
    //...
}

//实现Extension中定义的方法，必须在主类中实现
-(void)e_makeStr{
    s1_ = @"e_Hello";
    s2_ = @"e_World";
    s3_ = @"e_Hello";
    s4_ = @"e_World";
    s5_ = @"e_Hello";
    //Extension
    s6_ = @"e_Hello";
    s7_ = @"e_World";
    s8_ = @"e_Hello";
    s9_ = @"e_World";
}

//“私有“方法，其实方法都是公共的，只是因为没有在头文件中声明所以不可用，在外部可以通过performSelector或runtime来调用
-(void)_makeStr{
    s1_ = @"Hello";
    s2_ = @"World";
    s3_ = @"Hello";
    s4_ = @"World";
    s5_ = @"Hello";
    //Extension
    s6_ = @"Hello";
    s7_ = @"World";
    s8_ = @"Hello";
    s9_ = @"World";
}

@end
